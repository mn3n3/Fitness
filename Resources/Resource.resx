<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountNumber" xml:space="preserve">
    <value>Account Number</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="AddByAdmin" xml:space="preserve">
    <value>Add By Admin</value>
  </data>
  <data name="AddedSuccessfully" xml:space="preserve">
    <value>Added Successfully</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AnErrorOccurred" xml:space="preserve">
    <value>An Error Occurred</value>
  </data>
  <data name="ArabicAddress" xml:space="preserve">
    <value>Arabic Address</value>
  </data>
  <data name="ArabicName" xml:space="preserve">
    <value>Arabic Name</value>
  </data>
  <data name="AreYouSure" xml:space="preserve">
    <value>Are You Sure ?</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth Date</value>
  </data>
  <data name="CardNumber" xml:space="preserve">
    <value>Card Number</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="Classes" xml:space="preserve">
    <value>Classes</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ComapnyAddress" xml:space="preserve">
    <value>Comapny Address</value>
  </data>
  <data name="CompanyCode" xml:space="preserve">
    <value>Company Code</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="CostCenterNumber" xml:space="preserve">
    <value>Cost Center Number</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create Account</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="CurLang" xml:space="preserve">
    <value>Eng</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="DecimalPoint" xml:space="preserve">
    <value>Decimal Point</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeletedSuccessfully" xml:space="preserve">
    <value>Deleted Successfully</value>
  </data>
  <data name="Deleting" xml:space="preserve">
    <value>Deleting</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmptyTable" xml:space="preserve">
    <value>No data available in table</value>
  </data>
  <data name="EnglishAddress" xml:space="preserve">
    <value>English Address</value>
  </data>
  <data name="EnglishName" xml:space="preserve">
    <value>English Name</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="First" xml:space="preserve">
    <value>First</value>
  </data>
  <data name="Free" xml:space="preserve">
    <value>Free</value>
  </data>
  <data name="GenderCode" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="GroupCase" xml:space="preserve">
    <value>Group Case</value>
  </data>
  <data name="GroupCode" xml:space="preserve">
    <value>Group Code</value>
  </data>
  <data name="GroupName" xml:space="preserve">
    <value>Group Name</value>
  </data>
  <data name="Groups" xml:space="preserve">
    <value>Groups</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Image1" xml:space="preserve">
    <value>Image (1)</value>
  </data>
  <data name="Image2" xml:space="preserve">
    <value>Image (2)</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Showing _START_ to _END_ of _TOTAL_ entries</value>
  </data>
  <data name="InfoEmpty" xml:space="preserve">
    <value>Showing 0 to 0 of 0 entries</value>
  </data>
  <data name="InfoFiltered" xml:space="preserve">
    <value>(filtered from _MAX_ total entries)</value>
  </data>
  <data name="InsDateTime" xml:space="preserve">
    <value>Insert Date</value>
  </data>
  <data name="InsUserName" xml:space="preserve">
    <value>Insert User</value>
  </data>
  <data name="Interseted" xml:space="preserve">
    <value>Interseted</value>
  </data>
  <data name="ItemCode" xml:space="preserve">
    <value>Item Code</value>
  </data>
  <data name="ItemCost" xml:space="preserve">
    <value>Item Cost</value>
  </data>
  <data name="ItemName" xml:space="preserve">
    <value>Item Name</value>
  </data>
  <data name="ItemPrice" xml:space="preserve">
    <value>Item Price</value>
  </data>
  <data name="JobCode" xml:space="preserve">
    <value>Job Code</value>
  </data>
  <data name="Last" xml:space="preserve">
    <value>Last</value>
  </data>
  <data name="Lenght" xml:space="preserve">
    <value>Lenght</value>
  </data>
  <data name="LengthMenu" xml:space="preserve">
    <value>Show _MENU_ entries</value>
  </data>
  <data name="LoadingMsg" xml:space="preserve">
    <value>Please Watin Loading Your Data</value>
  </data>
  <data name="LoadingRecords" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="LockedOut" xml:space="preserve">
    <value>Locked Out</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>LogOff</value>
  </data>
  <data name="LogoPath" xml:space="preserve">
    <value>Logo Path</value>
  </data>
  <data name="MyNotinifactioLogs" xml:space="preserve">
    <value>My Notinifactio Logs</value>
  </data>
  <data name="NationalityCode" xml:space="preserve">
    <value>Nationality Code</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="ParentsName" xml:space="preserve">
    <value>Parents Name</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PeriodByDay" xml:space="preserve">
    <value>Period By Day</value>
  </data>
  <data name="PeriodByMonth" xml:space="preserve">
    <value>Period By Month</value>
  </data>
  <data name="PeriodByWeeks" xml:space="preserve">
    <value>Period By Weeks</value>
  </data>
  <data name="Phone1" xml:space="preserve">
    <value>Phone (1)</value>
  </data>
  <data name="Phone2" xml:space="preserve">
    <value>Phone (2)</value>
  </data>
  <data name="PlaceCode" xml:space="preserve">
    <value>Place Code</value>
  </data>
  <data name="PlaceOfBirth" xml:space="preserve">
    <value>Place Of Birth </value>
  </data>
  <data name="PleasefillalRequiredfields" xml:space="preserve">
    <value>Please fill all Required fields</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please Wait</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="PrintExcel" xml:space="preserve">
    <value>PrintExcel</value>
  </data>
  <data name="Processing" xml:space="preserve">
    <value>Processing...</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RememberMe" xml:space="preserve">
    <value>Remember Me</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Saving" xml:space="preserve">
    <value>Saving</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SocialStatus" xml:space="preserve">
    <value>Social Status</value>
  </data>
  <data name="SomthingWentWrong" xml:space="preserve">
    <value>Somthing Went Wrong</value>
  </data>
  <data name="SortAscending" xml:space="preserve">
    <value>activate to sort column ascending :</value>
  </data>
  <data name="SortDescending" xml:space="preserve">
    <value>activate to sort column descending :</value>
  </data>
  <data name="SourceCode" xml:space="preserve">
    <value>Source Code</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="SubscriberCode" xml:space="preserve">
    <value>Subscriber Code</value>
  </data>
  <data name="SubscriberName" xml:space="preserve">
    <value>Subscriber Name</value>
  </data>
  <data name="SubscriberType" xml:space="preserve">
    <value>Subscriber Type</value>
  </data>
  <data name="SubscriptionCode" xml:space="preserve">
    <value>Subscription Code</value>
  </data>
  <data name="SubscriptionName" xml:space="preserve">
    <value>Subscription Name</value>
  </data>
  <data name="Suspension" xml:space="preserve">
    <value>Suspension</value>
  </data>
  <data name="TeleFax" xml:space="preserve">
    <value>TeleFax</value>
  </data>
  <data name="ThisAccountHasBeenLocked" xml:space="preserve">
    <value>This Account Has Been Locked</value>
  </data>
  <data name="TrainerCode" xml:space="preserve">
    <value>Trainer Code</value>
  </data>
  <data name="TrainerName" xml:space="preserve">
    <value>Trainer Name</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UnInterseted" xml:space="preserve">
    <value>UnInterseted</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdatedSuccessfully" xml:space="preserve">
    <value>Updated Successfully</value>
  </data>
  <data name="Updating" xml:space="preserve">
    <value>Updating</value>
  </data>
  <data name="VisitorCode" xml:space="preserve">
    <value>Visitor Code</value>
  </data>
  <data name="VisitorName" xml:space="preserve">
    <value>VisitorName</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="YourAccountIsBeingCreated" xml:space="preserve">
    <value>Your Account Is Being Created</value>
  </data>
  <data name="YourrequesthasBeenSuccessfullySent" xml:space="preserve">
    <value>Your Request has Been Successfully Sent</value>
  </data>
  <data name="ZeroRecords" xml:space="preserve">
    <value>No matching records found</value>
  </data>
</root>